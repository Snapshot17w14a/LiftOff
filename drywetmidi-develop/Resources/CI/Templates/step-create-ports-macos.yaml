parameters:
  enabled: 'false'

steps:
- task: PowerShell@2
  displayName: Build 'LoopbackDevice' app (macOS)
  condition: and(succeeded(), ${{ parameters.enabled }})
  inputs:
    targetType: 'inline'
    script: |
      cd Resources/Utilities/CreateLoopbackPort_macOS
      Write-Host "Building arm64 app..."
      clang -undefined dynamic_lookup -o LoopbackDevice_arm64 LoopbackDevice.c -framework CoreServices -framework CoreFoundation -framework CoreMIDI -arch arm64
      Write-Host "Building x86_64 app..."
      clang -undefined dynamic_lookup -o LoopbackDevice_x86_64 LoopbackDevice.c -framework CoreServices -framework CoreFoundation -framework CoreMIDI -arch x86_64
      Write-Host "Merging apps into single unversal one..."
      lipo LoopbackDevice_x86_64 LoopbackDevice_arm64 -output LoopbackDevice -create
      lipo -info LoopbackDevice
- task: PublishPipelineArtifact@1
  displayName: Publish 'LoopbackDevice' artifact
  enabled: false
  condition: contains(variables.VmImage, 'macos')
  inputs:
    targetPath: 'Resources/Utilities/CreateLoopbackPort_macOS/LoopbackDevice'
    artifactName: 'LoopbackDevice'
    artifactType: pipeline
- task: CmdLine@2
  displayName: Create virtual MIDI ports (macOS)
  condition: and(succeeded(), ${{ parameters.enabled }})
  inputs:
    script: |
      cd Resources/Utilities/CreateLoopbackPort_macOS
      ./LoopbackDevice "MIDI A" "MIDI B" "MIDI C" &